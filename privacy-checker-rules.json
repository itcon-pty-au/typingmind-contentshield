{
  "rules": [
    {
      "id": 1,
      "type": "regex",
      "pattern": "\\b(?:\\d[ -]*?){13,16}\\b",
      "name": "Credit Card Number",
      "active": true
    },
    {
      "id": 2,
      "type": "regex",
      "pattern": "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b",
      "name": "Email Address",
      "active": true
    },
    {
      "id": 3,
      "type": "regex",
      "pattern": "\\b(?:\\d{3}[-.]?){2}\\d{4}\\b",
      "name": "SSN",
      "active": true
    },
    {
      "id": 4,
      "type": "regex",
      "pattern": "\\b(?:password|pwd)\\s*[:=]\\s*['\"](?!\\*+)[^'\"]+['\"]",
      "name": "Password Assignment",
      "active": true,
      "description": "Matches password assignments that aren't masked (ignores values with just asterisks)"
    },
    {
      "id": 5,
      "type": "string",
      "pattern": "confidential",
      "name": "Confidential Reference",
      "active": true,
      "caseSensitive": false
    },
    {
      "id": 6,
      "type": "string",
      "pattern": "secret",
      "name": "Secret Reference",
      "active": true,
      "caseSensitive": false
    },
    {
      "id": 7,
      "type": "regex",
      "pattern": "\\b(?:api[_-]?key|apikey|api[_-]?token|key|token|secret)\\s*[:=]\\s*['\"](?!\\*\\*\\*)[A-Za-z0-9+/=._\\-]{8,}['\"]",
      "name": "API Key or Secret",
      "active": true,
      "description": "Matches API keys and secrets that aren't masked"
    },
    {
      "id": 8,
      "type": "regex",
      "pattern": "\\b(?:access[_-]?key|access[_-]?token|client[_-]?secret)\\s*[:=]\\s*['\"](?!\\*\\*\\*)[A-Za-z0-9+/=._\\-]{8,}['\"]",
      "name": "Access Key or Secret",
      "active": true,
      "description": "Matches access keys and secrets that aren't masked"
    },
    {
      "id": 9,
      "type": "regex",
      "pattern": "\\$env:(?:api[_-]?key|apikey|access[_-]?key|secret|password)\\s*=\\s*['\"](?!\\*\\*\\*)[A-Za-z0-9+/=._\\-]{8,}['\"]",
      "name": "PowerShell Credentials",
      "active": true,
      "description": "Matches PowerShell environment variables containing credentials that aren't masked"
    },
    {
      "id": 10,
      "type": "regex",
      "pattern": "ConnectionString\\s*=\\s*['\"](?:Data Source|Server)=[^;]+;(?:Initial Catalog|Database)=[^;]+;(?:User ?Id|UID)=[^;]+;(?:Password|PWD)=(?!\\*\\*\\*)[^;]+['\"]",
      "name": "Connection String with Credentials",
      "active": true,
      "description": "Matches database connection strings with credentials"
    },
    {
      "id": 11,
      "type": "regex",
      "pattern": "\\b(?:\\d{10})\\b|\\b(?:\\d{3}[-. ])(?:\\d{3}[-. ])(?:\\d{4})\\b",
      "name": "Phone Number",
      "active": true,
      "description": "Matches standard phone number formats"
    },
    {
      "id": 12,
      "type": "regex",
      "pattern": "\\b\\d{1,5}\\s[A-Z][a-z]+(?:\\s[A-Z][a-z]+)*\\s(?:Street|St|Avenue|Ave|Boulevard|Blvd|Road|Rd|Highway|Hwy|Lane|Ln|Drive|Dr|Court|Ct|Plaza|Plz|Terrace|Ter)\\b,?\\s*(?:[A-Z][a-z]+(?:\\s[A-Z][a-z]+)*,?\\s*)?(?:[A-Z]{2})\\s*(?:\\d{5})?(?:-\\d{4})?\\b",
      "name": "Physical Address",
      "active": true,
      "description": "Matches common physical address patterns"
    },
    {
      "id": 13,
      "type": "regex",
      "pattern": "\\b(?:[0-9A-F]{2}[:-]){5}[0-9A-F]{2}\\b",
      "name": "MAC Address",
      "active": true,
      "description": "Matches MAC addresses"
    },
    {
      "id": 14,
      "type": "regex",
      "pattern": "\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b",
      "name": "IPv4 Address",
      "active": true,
      "description": "Matches IPv4 addresses"
    },
    {
      "id": 15,
      "type": "regex",
      "pattern": "\\b(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}\\b",
      "name": "IPv6 Address",
      "active": true,
      "description": "Matches IPv6 addresses"
    },
    {
      "id": 16,
      "type": "regex",
      "pattern": "-----BEGIN\\s+(?:RSA|OPENSSH|DSA|EC|PGP)\\s+PRIVATE\\s+KEY-----[\\s\\S]*?-----END\\s+(?:RSA|OPENSSH|DSA|EC|PGP)\\s+PRIVATE\\s+KEY-----",
      "name": "Private Key",
      "active": true,
      "description": "Matches private key files"
    },
    {
      "id": 17,
      "type": "regex",
      "pattern": "\\b(?:azure|aws|google)(?:_|\\s)?(?:account|secret|subscription|key)\\s*[:=]\\s*['\"](?!\\*\\*\\*)[A-Za-z0-9+/=._\\-]{8,}['\"]",
      "name": "Cloud Provider Credentials",
      "active": true,
      "description": "Matches cloud provider credentials that aren't masked"
    },
    {
      "id": 18,
      "type": "regex",
      "pattern": "\\bNMI\\s*[:=]?\\s*['\"]?\\d{10}['\"]?",
      "name": "NMI Reference",
      "active": true,
      "description": "Matches National Metering Identifier references used in the utility industry"
    },
    {
      "id": 19,
      "type": "regex",
      "pattern": "\\bjwt\\s*[:=]\\s*['\"](?!\\*\\*\\*)[A-Za-z0-9_\\-\\.]+\\.[A-Za-z0-9_\\-\\.]+\\.[A-Za-z0-9_\\-\\.]+['\"]",
      "name": "JWT Token",
      "active": true,
      "description": "Matches JWT tokens"
    },
    {
      "id": 20,
      "type": "regex",
      "pattern": "\\bAuthorizationToken\\s*[:=]\\s*['\"](?!\\*\\*\\*)Bearer\\s+[A-Za-z0-9._\\-]+['\"]",
      "name": "Bearer Token",
      "active": true,
      "description": "Matches Bearer tokens in Authorization headers"
    },
    {
      "id": 21,
      "type": "regex",
      "pattern": "\\bclient[_-]?id\\s*[:=]\\s*['\"](?!\\*\\*\\*)[A-Za-z0-9\\-]{8,}['\"]",
      "name": "OAuth Client ID",
      "active": true,
      "description": "Matches OAuth client IDs"
    },
    {
      "id": 22,
      "type": "regex",
      "pattern": "var\\s+(?:config|settings)\\s*=\\s*\\{[^}]*['\"](?:apiKey|secretKey|authToken|password|credentials)['\"]:?\\s*['\"](?!\\*\\*\\*)[^'\"]+['\"]",
      "name": "JavaScript Configuration with Secrets",
      "active": true,
      "description": "Matches JavaScript configuration objects containing credentials"
    },
    {
      "id": 23,
      "type": "regex",
      "pattern": "\\b[A-Za-z0-9+/]{40,}\\b",
      "name": "Base64 Encoded Secret",
      "active": true,
      "description": "Matches long Base64 encoded strings that might be secrets"
    },
    {
      "id": 24,
      "type": "regex",
      "pattern": "\\b(?:github|gitlab|bitbucket)\\s*[:=]\\s*['\"](?!\\*\\*\\*)(?:ghp|glpat|gl-pat)_[A-Za-z0-9_\\-]{20,}['\"]",
      "name": "Git Provider Token",
      "active": true,
      "description": "Matches Git provider access tokens"
    },
    {
      "id": 25,
      "type": "regex",
      "pattern": "\\b(?:meter|customer|account|service)\\s*id\\s*[:=]\\s*['\"]?\\d{5,}['\"]?",
      "name": "Utility Industry ID",
      "active": true,
      "description": "Matches utility industry identifiers"
    }
  ]
}
